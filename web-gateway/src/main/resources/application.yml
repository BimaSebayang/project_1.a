# ===================================================================
# Spring Boot configuration.
#
# This configuration will be overridden by the Spring profile you use,
# for example application-dev.yml if you use the "dev" profile.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

eureka:
    client:
        serviceUrl:
            defaultZone: ${vcap.services.discovery-service.credentials.uri:http://127.0.0.1:58081}/eureka/
    instance:
        leaseRenewalIntervalInSeconds: 1
        leaseExpirationDurationInSeconds: 2
 
#eureka:
#  client:
#    enabled: true
#    healthcheck:
#      enabled: true
#    fetch-registry: true
#    register-with-eureka: true
#    instance-info-replication-interval-seconds: 10
#    registry-fetch-interval-seconds: 10
#  instance:
#    appname: gateway
#    instanceId: gateway:${spring.application.instance-id:${random.value}}
#    lease-renewal-interval-in-seconds: 5
#    lease-expiration-duration-in-seconds: 10
#    status-page-url-path: ${management.endpoints.web.base-path}/info
#    health-check-url-path: ${management.endpoints.web.base-path}/health
#    metadata-map:
#      zone: primary # This is needed for the load balancer
#      profile: ${spring.profiles.active}
#      version: #project.version#
#      git-version: ${git.commit.id.describe:}
#      git-commit: ${git.commit.id.abbrev:}
#      git-branch: ${git.branch:}
ribbon:
  eureka:
    enabled: true
# See http://cloud.spring.io/spring-cloud-netflix/spring-cloud-netflix.html
zuul: # those values must be configured depending on the application specific needs
  sensitive-headers: Cookie,Set-Cookie #see https://github.com/spring-cloud/spring-cloud-netflix/issues/3126
  host:
    max-total-connections: 1000
    max-per-route-connections: 100
  semaphore:
    max-semaphores: 500
  ignored-services: '*'
  ignore-security-headers: false
  ignored-headers: Authorization
  routes:
    web-uda-ctl:
      path: /web-uda/**
      sensitiveHeaders: Authorization
      url: http://localhost:48081/web-uda
      service-id: web-uda-service
    web-uda-image:
      path: /images/**
      sensitiveHeaders: Authorization
      url: http://localhost:48081/images
      service-id: web-uda-images
    web-uda-js:
      path: /js/**
      sensitiveHeaders: Authorization
      url: http://localhost:48081/js
      service-id: web-uda-js 
    web-uda-css:
      path: /css/**
      sensitiveHeaders: Authorization
      url: http://localhost:48081/css
      service-id: web-uda-css
    web-uda-ws:
      path: /web-rest-uda/**
      sensitiveHeaders: Authorization
      url: http://localhost:48081/web-rest-uda
      service-id: web-uda-ws 
  

# See https://github.com/Netflix/Hystrix/wiki/Configuration
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 10000

management:
  endpoints:
    web:
      base-path: /management
      exposure:
        include: ['configprops', 'env', 'health', 'info', 'jhimetrics', 'logfile', 'loggers', 'prometheus', 'threaddump']
  endpoint:
    health:
      show-details: when-authorized
    jhimetrics:
      enabled: true
  info:
    git:
      mode: full
  health:
    mail:
      enabled: false # When using the MailService, configure an SMTP server and set this to true
  metrics:
    export:
      # Prometheus is the default metrics backend
      prometheus:
        enabled: true
        step: 60
    enable:
      http: true
      jvm: true
      logback: true
      process: true
      system: true
    distribution:
      percentiles-histogram:
        all: true
      percentiles:
        all: 0, 0.5, 0.75, 0.95, 0.99, 1.0
    tags:
      application: ${spring.application.name}
    web:
      server:
        auto-time-requests: true